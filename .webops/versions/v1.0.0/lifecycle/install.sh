#!/bin/bash
#
# WebOps Platform Installer
# Quick installation script for the WebOps hosting platform
#
# Usage: sudo ./install.sh
#
# This script performs a complete installation of the WebOps platform
# including base system hardening and core components.
#

set -euo pipefail

# Color codes for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# Configuration
readonly WEBOPS_VERSION="v1.0.0"
readonly WEBOPS_PLATFORM_DIR="$(pwd)/.webops"
readonly WEBOPS_VERSION_DIR="${WEBOPS_PLATFORM_DIR}/versions/${WEBOPS_VERSION}"
readonly WEBOPS_BIN="${WEBOPS_VERSION_DIR}/bin/webops"

# Logging setup
readonly LOG_DIR="/var/log/webops"
readonly INSTALL_LOG="${LOG_DIR}/install-$(date +%Y%m%d-%H%M%S).log"

# Initialize logging
init_logging() {
    # Create log directory
    mkdir -p "$LOG_DIR"
    chmod 755 "$LOG_DIR"

    # Redirect all output to log file and console
    exec > >(tee -a "$INSTALL_LOG")
    exec 2>&1

    echo "Installation log: $INSTALL_LOG"
    echo "Started at: $(date)"
    echo ""
}

#=============================================================================
# Logging Functions
#=============================================================================

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

#=============================================================================
# Installation Functions
#=============================================================================

validate_environment() {
    log_step "Validating installation environment..."
    
    # Check if running as root
    if [[ $EUID -ne 0 ]]; then
        log_error "This script must be run as root (use sudo)"
        exit 1
    fi
    
    # Check if WebOps platform exists
    if [[ ! -d "${WEBOPS_VERSION_DIR}" ]]; then
        log_error "WebOps platform version ${WEBOPS_VERSION} not found"
        log_error "Please ensure you're running this script from the WebOps repository root"
        exit 1
    fi
    
    # Check if webops binary exists
    if [[ ! -x "${WEBOPS_BIN}" ]]; then
        log_error "WebOps binary not found: ${WEBOPS_BIN}"
        exit 1
    fi
    
    log_info "Environment validation passed ✓"
}

show_welcome() {
    echo -e "${BLUE}"
    cat <<'EOF'
╦ ╦┌─┐┌┐ ╔═╗┌─┐┌─┐
║║║├┤ ├┴┐║ ║├─┘└─┐
╚╩╝└─┘└─┘╚═╝┴  └─┘
VPS Hosting Platform Installer
EOF
    echo -e "${NC}"
    
    echo -e "${GREEN}Welcome to WebOps Platform Installation!${NC}"
    echo -e "${BLUE}Version:${NC} ${WEBOPS_VERSION}"
    echo ""
    echo -e "${YELLOW}This installer will:${NC}"
    echo "  • Harden the base system for security"
    echo "  • Install core WebOps platform components"
    echo "  • Configure PostgreSQL database"
    echo "  • Set up monitoring and logging"
    echo "  • Install the Django control panel"
    echo ""
}

create_default_config() {
    log_step "Creating default configuration..."

    local config_file="${WEBOPS_PLATFORM_DIR}/config.env"

    # Detect installation root (parent directory of .webops)
    local detected_root="$(cd "$(dirname "${WEBOPS_PLATFORM_DIR}")" && pwd)"

    # Use detected path for development, /opt/webops for production
    local install_root="${WEBOPS_INSTALL_ROOT:-${detected_root}}"

    log_info "Installation root: $install_root"

    # Create default configuration
    cat > "$config_file" <<EOF
# WebOps Platform Configuration
# Generated by install.sh on $(date)

# Platform Configuration
WEBOPS_VERSION=${WEBOPS_VERSION}
WEBOPS_PLATFORM_DIR=${WEBOPS_PLATFORM_DIR}

# System Configuration
WEBOPS_USER=webops
WEBOPS_ROOT=${install_root}
CONTROL_PANEL_DIR=${install_root}/control-panel
DEPLOYMENTS_DIR=${install_root}/deployments
SHARED_DIR=${install_root}/shared
BACKUPS_DIR=${install_root}/backups
WEBOPS_DATA_DIR=${install_root}/data
WEBOPS_LOG_DIR=/var/log/webops
WEBOPS_RUN_DIR=/var/run/webops

# Database Configuration
POSTGRES_ENABLED=true
POSTGRES_VERSION=14
POSTGRES_DATA_DIR=/opt/webops/postgresql/data

# Control Panel Configuration
CONTROL_PANEL_ENABLED=true
CONTROL_PANEL_PORT=8000
CONTROL_PANEL_HOST=0.0.0.0

# Monitoring Configuration
MONITORING_ENABLED=true
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000

# Security Configuration
ENABLE_FIREWALL=true
ENABLE_FAIL2BAN=true
ENABLE_AUTO_UPDATES=false

# Feature Flags
ENABLE_KUBERNETES=false
ENABLE_KVM=false
ENABLE_PATRONI=false
EOF

    log_info "Default configuration created at $config_file"
}

run_installation() {
    log_step "Starting WebOps platform installation..."
    
    # Create configuration file
    create_default_config
    
    # Run the platform installation
    log_info "Executing: ${WEBOPS_BIN} install --config ${WEBOPS_PLATFORM_DIR}/config.env --yes"
    
    if "${WEBOPS_BIN}" install --config "${WEBOPS_PLATFORM_DIR}/config.env" --yes; then
        log_success "WebOps platform installation completed successfully ✓"
        return 0
    else
        log_error "WebOps platform installation failed"
        return 1
    fi
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_completion_message() {
    local server_ip=$(hostname -I | awk '{print $1}')

    echo ""
    echo -e "${GREEN}╔═══════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${GREEN}║                                                               ║${NC}"
    echo -e "${GREEN}║  🎉  WebOps Installation Complete!                           ║${NC}"
    echo -e "${GREEN}║                                                               ║${NC}"
    echo -e "${GREEN}╚═══════════════════════════════════════════════════════════════╝${NC}"
    echo ""
    echo -e "${BLUE}Platform Version:${NC} ${WEBOPS_VERSION}"
    echo -e "${BLUE}Control Panel URL:${NC} http://${server_ip}:8000/"
    echo ""
    echo -e "${YELLOW}Admin Credentials:${NC}"
    echo "  Location: /opt/webops/.secrets/admin_credentials.txt"
    echo "  View with: sudo cat /opt/webops/.secrets/admin_credentials.txt"
    echo ""
    echo -e "${YELLOW}Next Steps:${NC}"
    echo "  1. Access the control panel in your browser"
    echo "  2. Login with the admin credentials"
    echo "  3. Change your password after first login"
    echo "  4. Deploy your first application!"
    echo ""
    echo -e "${YELLOW}Platform Management:${NC}"
    echo "  Status: ${WEBOPS_BIN} state"
    echo "  Validate: ${WEBOPS_BIN} validate"
    echo "  Update: ${WEBOPS_BIN} update"
    echo "  Rollback: ${WEBOPS_BIN} rollback"
    echo ""
    echo -e "${BLUE}Documentation:${NC} ${WEBOPS_PLATFORM_DIR}/docs/"
    echo ""
    echo -e "${GREEN}Installation completed successfully! 🚀${NC}"
}

#=============================================================================
# Main Installation Flow
#=============================================================================

main() {
    # Initialize logging
    init_logging

    # Show welcome message
    show_welcome

    # Validate environment
    validate_environment

    # Run installation
    if run_installation; then
        # Print completion message
        print_completion_message

        log_info "Installation log saved to: $INSTALL_LOG"
        exit 0
    else
        log_error "Installation failed. Please check the logs above."
        log_error "Full log available at: $INSTALL_LOG"
        exit 1
    fi
}

# Run main function
main "$@"