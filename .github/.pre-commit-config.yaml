# Pre-commit hooks for WebOps
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        name: Format Python code with Black
        language_version: python3.11
        args: ['--line-length=100']
        files: ^(control-panel/apps/|cli/webops_cli/).*\.py$

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort Python imports
        args: ['--profile=black', '--line-length=100']
        files: ^(control-panel/apps/|cli/webops_cli/).*\.py$

  # Python linting
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint Python code with Flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        files: ^(control-panel/apps/|cli/webops_cli/).*\.py$

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        name: Security audit with Bandit
        args: ['-ll', '-r', 'control-panel/apps/', 'cli/webops_cli/']
        files: ^(control-panel/apps/|cli/webops_cli/).*\.py$

  # Secret scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: mixed-line-ending
        name: Fix mixed line endings
        args: ['--fix=lf']
      - id: detect-private-key
        name: Detect private keys
      - id: check-executables-have-shebangs
        name: Check executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang scripts are executable

  # Django specific
  - repo: local
    hooks:
      - id: django-check
        name: Django system check
        entry: bash -c 'cd control-panel && python manage.py check --deploy'
        language: system
        pass_filenames: false
        files: ^control-panel/.*\.py$

      - id: django-migrations
        name: Check for missing migrations
        entry: bash -c 'cd control-panel && python manage.py makemigrations --check --dry-run'
        language: system
        pass_filenames: false
        files: ^control-panel/apps/.*/models\.py$

  # Shell script checking
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        name: Check shell scripts with ShellCheck
        files: \.(sh|bash)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        name: Lint Markdown files
        args: ['--fix']
        files: \.md$

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: ['-d', '{extends: default, rules: {line-length: {max: 120}}}']

  # Commit message linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.1.0
    hooks:
      - id: conventional-pre-commit
        name: Check commit message format
        stages: [commit-msg]
        args: ['--force-scope']

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        name: Type check with MyPy
        additional_dependencies: [django-stubs, types-requests]
        args: ['--ignore-missing-imports', '--no-strict-optional']
        files: ^control-panel/apps/.*\.py$

  # Check requirements.txt
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
        name: Check Python dependencies for security issues
        files: requirements.txt

  # JavaScript/CSS formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Format JS/CSS/HTML with Prettier
        types_or: [javascript, css, html]
        files: ^control-panel/(static|templates)/.*\.(js|css|html)$

  # TODO/FIXME checker
  - repo: local
    hooks:
      - id: check-todos
        name: Check for TODO/FIXME comments
        entry: bash -c 'grep -rn "TODO\|FIXME\|XXX" control-panel/apps/ --exclude-dir=migrations && echo "Warning: TODO/FIXME found" || exit 0'
        language: system
        pass_filenames: false
        always_run: true
        verbose: true

# Global configuration
default_language_version:
  python: python3.11

# Skip certain files
exclude: |
  (?x)^(
    control-panel/venv/|
    control-panel/.*/migrations/|
    control-panel/staticfiles/|
    control-panel/media/|
    .*\.sqlite3|
    .*\.pyc|
    .*/__pycache__/|
    \.git/
  )$
