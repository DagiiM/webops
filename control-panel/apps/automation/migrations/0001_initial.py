# Generated by Django 5.0.1 on 2025-10-19 20:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addons', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='draft', max_length=20)),
                ('trigger_type', models.CharField(choices=[('manual', 'Manual Trigger'), ('schedule', 'Scheduled'), ('webhook', 'Webhook'), ('event', 'Event-Based')], default='manual', max_length=20)),
                ('schedule_cron', models.CharField(blank=True, help_text='Cron expression for scheduled workflows', max_length=100)),
                ('canvas_data', models.JSONField(default=dict, help_text='Visual canvas state (nodes, connections, positions)')),
                ('total_executions', models.IntegerField(default=0)),
                ('successful_executions', models.IntegerField(default=0)),
                ('failed_executions', models.IntegerField(default=0)),
                ('last_executed_at', models.DateTimeField(blank=True, null=True)),
                ('average_duration_ms', models.IntegerField(default=0)),
                ('timeout_seconds', models.IntegerField(default=300, help_text='Workflow timeout in seconds')),
                ('retry_on_failure', models.BooleanField(default=True)),
                ('max_retries', models.IntegerField(default=3)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workflow',
                'verbose_name_plural': 'Workflows',
                'db_table': 'automation_workflows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('node_id', models.CharField(help_text='Unique ID within workflow', max_length=100)),
                ('node_type', models.CharField(choices=[('google_docs', 'Google Docs'), ('google_sheets', 'Google Sheets'), ('webhook', 'Webhook Input'), ('database', 'Database Query'), ('api', 'API Request'), ('file', 'File Input'), ('custom_url', 'Custom URL'), ('llm', 'LLM Processor'), ('transform', 'Data Transform'), ('filter', 'Filter'), ('aggregate', 'Aggregate'), ('split', 'Split'), ('merge', 'Merge'), ('code', 'Custom Code'), ('email', 'Email'), ('webhook_output', 'Webhook Output'), ('database_output', 'Database Write'), ('file_output', 'File Output'), ('slack', 'Slack Message'), ('api_output', 'API Call'), ('notification', 'System Notification'), ('condition', 'Conditional'), ('loop', 'Loop'), ('delay', 'Delay'), ('error_handler', 'Error Handler')], max_length=50)),
                ('label', models.CharField(max_length=255)),
                ('position_x', models.IntegerField(default=0)),
                ('position_y', models.IntegerField(default=0)),
                ('config', models.JSONField(default=dict, help_text='Node-specific configuration (API keys, URLs, settings, etc.)')),
                ('enabled', models.BooleanField(default=True)),
                ('timeout_seconds', models.IntegerField(default=60)),
                ('retry_on_failure', models.BooleanField(default=False)),
                ('max_retries', models.IntegerField(default=1)),
                ('addon', models.ForeignKey(blank=True, help_text='Linked addon for data source nodes', null=True, on_delete=django.db.models.deletion.SET_NULL, to='addons.addon')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='automation.workflow')),
            ],
            options={
                'verbose_name': 'Workflow Node',
                'verbose_name_plural': 'Workflow Nodes',
                'db_table': 'automation_workflow_nodes',
                'ordering': ['created_at'],
                'unique_together': {('workflow', 'node_id')},
            },
        ),
        migrations.CreateModel(
            name='WorkflowConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_handle', models.CharField(default='output', help_text='Output handle of source node', max_length=50)),
                ('target_handle', models.CharField(default='input', help_text='Input handle of target node', max_length=50)),
                ('condition', models.JSONField(blank=True, default=dict, help_text='Optional condition for connection activation')),
                ('transform', models.JSONField(blank=True, default=dict, help_text='Optional data transformation between nodes')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='automation.workflow')),
                ('source_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_connections', to='automation.workflownode')),
                ('target_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_connections', to='automation.workflownode')),
            ],
            options={
                'verbose_name': 'Workflow Connection',
                'verbose_name_plural': 'Workflow Connections',
                'db_table': 'automation_workflow_connections',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('data_processing', 'Data Processing'), ('content_generation', 'Content Generation'), ('monitoring', 'Monitoring & Alerts'), ('integration', 'Integration'), ('custom', 'Custom')], max_length=50)),
                ('workflow_data', models.JSONField(help_text='Complete workflow configuration (nodes, connections, settings)')),
                ('is_official', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('thumbnail_url', models.URLField(blank=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workflow Template',
                'verbose_name_plural': 'Workflow Templates',
                'db_table': 'automation_workflow_templates',
                'ordering': ['-usage_count', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSourceCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(choices=[('google', 'Google'), ('github', 'GitHub'), ('slack', 'Slack'), ('custom', 'Custom API')], max_length=50)),
                ('name', models.CharField(help_text='Friendly name for this credential', max_length=255)),
                ('credentials', models.JSONField(help_text='Encrypted credentials (tokens, keys, etc.)')),
                ('is_valid', models.BooleanField(default=True)),
                ('last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_source_credentials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Source Credential',
                'verbose_name_plural': 'Data Source Credentials',
                'db_table': 'automation_data_source_credentials',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'provider', 'name')},
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('trigger_type', models.CharField(max_length=20)),
                ('trigger_data', models.JSONField(blank=True, default=dict)),
                ('input_data', models.JSONField(blank=True, default=dict)),
                ('output_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('error_traceback', models.TextField(blank=True)),
                ('node_logs', models.JSONField(default=list, help_text='Execution log for each node')),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='automation.workflow')),
            ],
            options={
                'verbose_name': 'Workflow Execution',
                'verbose_name_plural': 'Workflow Executions',
                'db_table': 'automation_workflow_executions',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['workflow', '-started_at'], name='automation__workflo_1b14f5_idx'), models.Index(fields=['status'], name='automation__status_cea878_idx')],
            },
        ),
    ]
