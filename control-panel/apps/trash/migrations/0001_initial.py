# Generated by Django 5.0.1 on 2025-10-21 19:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TrashSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_retention_days', models.IntegerField(default=30, help_text='Default days to keep items in trash')),
                ('max_retention_days', models.IntegerField(default=90, help_text='Maximum days items can be kept in trash')),
                ('max_trash_size_gb', models.IntegerField(default=10, help_text='Maximum total size of trash in GB')),
                ('enable_auto_cleanup', models.BooleanField(default=True, help_text='Enable automatic cleanup of expired items')),
                ('cleanup_schedule_hours', models.IntegerField(default=24, help_text='Hours between automatic cleanup runs')),
                ('notify_before_deletion_days', models.IntegerField(default=7, help_text='Days before deletion to send notification')),
            ],
            options={
                'verbose_name': 'Trash Settings',
                'verbose_name_plural': 'Trash Settings',
            },
        ),
        migrations.CreateModel(
            name='TrashItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_path', models.CharField(help_text='Original path or identifier of the deleted item', max_length=500)),
                ('item_type', models.CharField(help_text='Type of item (deployment, database, file, etc.)', max_length=50)),
                ('item_name', models.CharField(help_text='Display name of the deleted item', max_length=200)),
                ('deleted_at', models.DateTimeField(auto_now_add=True, help_text='When the item was moved to trash')),
                ('size', models.BigIntegerField(blank=True, help_text='Size of the item in bytes (for files/databases)', null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional item-specific metadata for restoration')),
                ('is_restored', models.BooleanField(default=False, help_text='Whether this item has been restored')),
                ('restored_at', models.DateTimeField(blank=True, help_text='When the item was restored', null=True)),
                ('is_permanently_deleted', models.BooleanField(default=False, help_text='Whether this item has been permanently deleted')),
                ('permanently_deleted_at', models.DateTimeField(blank=True, help_text='When the item was permanently deleted', null=True)),
                ('retention_days', models.IntegerField(default=30, help_text='Days to keep this item before auto-deletion')),
                ('auto_delete_at', models.DateTimeField(blank=True, help_text='When this item should be automatically deleted', null=True)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who deleted this item', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('permanently_deleted_by', models.ForeignKey(blank=True, help_text='User who permanently deleted this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permanently_deleted_trash_items', to=settings.AUTH_USER_MODEL)),
                ('restored_by', models.ForeignKey(blank=True, help_text='User who restored this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restored_trash_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trash Item',
                'verbose_name_plural': 'Trash Items',
                'ordering': ['-deleted_at'],
            },
        ),
        migrations.CreateModel(
            name='TrashOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(choices=[('delete', 'Item Deleted'), ('restore', 'Item Restored'), ('permanent_delete', 'Item Permanently Deleted'), ('bulk_delete', 'Bulk Delete'), ('bulk_restore', 'Bulk Restore'), ('bulk_permanent_delete', 'Bulk Permanent Delete'), ('auto_cleanup', 'Auto Cleanup'), ('empty_trash', 'Empty Trash')], help_text='Type of operation performed', max_length=25)),
                ('performed_at', models.DateTimeField(auto_now_add=True, help_text='When the operation was performed')),
                ('items_count', models.IntegerField(help_text='Number of items affected')),
                ('details', models.JSONField(default=dict, help_text='Additional operation details')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('items_affected', models.ManyToManyField(help_text='Trash items affected by this operation', related_name='operations', to='trash.trashitem')),
                ('performed_by', models.ForeignKey(help_text='User who performed the operation', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trash Operation',
                'verbose_name_plural': 'Trash Operations',
                'ordering': ['-performed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='trashitem',
            index=models.Index(fields=['item_type', 'deleted_at'], name='trash_trash_item_ty_cbf6f6_idx'),
        ),
        migrations.AddIndex(
            model_name='trashitem',
            index=models.Index(fields=['deleted_by', 'deleted_at'], name='trash_trash_deleted_00663a_idx'),
        ),
        migrations.AddIndex(
            model_name='trashitem',
            index=models.Index(fields=['is_restored', 'deleted_at'], name='trash_trash_is_rest_584428_idx'),
        ),
        migrations.AddIndex(
            model_name='trashitem',
            index=models.Index(fields=['auto_delete_at'], name='trash_trash_auto_de_58d8af_idx'),
        ),
        migrations.AddIndex(
            model_name='trashoperation',
            index=models.Index(fields=['operation', 'performed_at'], name='trash_trash_operati_221ae3_idx'),
        ),
        migrations.AddIndex(
            model_name='trashoperation',
            index=models.Index(fields=['performed_by', 'performed_at'], name='trash_trash_perform_bdb273_idx'),
        ),
    ]
