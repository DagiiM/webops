# Generated by Django 5.0.1 on 2025-10-21 00:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_id', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=100)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=20)),
                ('implementation_status', models.CharField(choices=[('not_implemented', 'Not Implemented'), ('partially_implemented', 'Partially Implemented'), ('implemented', 'Implemented'), ('automated', 'Automated')], default='not_implemented', max_length=25)),
                ('evidence_required', models.BooleanField(default=True)),
                ('evidence_description', models.TextField(blank=True)),
                ('is_automated', models.BooleanField(default=False)),
                ('automation_script', models.CharField(blank=True, max_length=255)),
                ('last_automated_check', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['framework', 'control_id'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceFramework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('version', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_type', models.CharField(choices=[('document', 'Document'), ('screenshot', 'Screenshot'), ('log', 'Log File'), ('script', 'Script'), ('report', 'Report'), ('certificate', 'Certificate'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_data', models.BinaryField(blank=True, null=True)),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('validation_notes', models.TextField(blank=True)),
                ('collected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='compliance.compliancecontrol')),
            ],
        ),
        migrations.AddField(
            model_name='compliancecontrol',
            name='framework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='compliance.complianceframework'),
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('assessment', 'Compliance Assessment'), ('audit', 'Audit Report'), ('gap_analysis', 'Gap Analysis'), ('remediation', 'Remediation Report'), ('status', 'Status Report'), ('summary', 'Executive Summary')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('approved', 'Approved'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('total_controls', models.IntegerField(default=0)),
                ('implemented_controls', models.IntegerField(default=0)),
                ('automated_controls', models.IntegerField(default=0)),
                ('compliant_controls', models.IntegerField(default=0)),
                ('compliance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('report_data', models.JSONField(default=dict)),
                ('pdf_report', models.FileField(blank=True, null=True, upload_to='compliance_reports/')),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='compliance.complianceframework')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('data_types', models.JSONField(default=list, help_text='List of data types this policy applies to')),
                ('retention_days', models.IntegerField(help_text='Number of days to retain data')),
                ('archive_before_delete', models.BooleanField(default=True, help_text='Archive data before deletion')),
                ('is_active', models.BooleanField(default=True)),
                ('last_enforced', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frameworks', models.ManyToManyField(related_name='retention_policies', to='compliance.complianceframework')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_id', models.CharField(max_length=100, unique=True)),
                ('scan_type', models.CharField(choices=[('malware', 'Malware Scan'), ('vulnerability', 'Vulnerability Scan'), ('compliance', 'Compliance Scan'), ('configuration', 'Configuration Scan'), ('access_control', 'Access Control Scan'), ('backup_verification', 'Backup Verification'), ('comprehensive', 'Comprehensive Security Scan')], max_length=50)),
                ('target', models.CharField(max_length=255)),
                ('tool', models.CharField(choices=[('clamav', 'ClamAV'), ('lynis', 'Lynis'), ('rkhunter', 'RKHunter'), ('openvas', 'OpenVAS'), ('custom', 'Custom Script')], max_length=50)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='running', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('total_items', models.IntegerField(default=0)),
                ('threats_found', models.IntegerField(default=0)),
                ('warnings_found', models.IntegerField(default=0)),
                ('clean_items', models.IntegerField(default=0)),
                ('security_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('results_data', models.JSONField(default=dict)),
                ('is_automated', models.BooleanField(default=True)),
                ('automation_script', models.CharField(blank=True, max_length=255)),
                ('related_controls', models.ManyToManyField(blank=True, related_name='security_scans', to='compliance.compliancecontrol')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('control_failure', 'Control Implementation Failure'), ('evidence_expiry', 'Evidence Expiry Warning'), ('scan_failure', 'Security Scan Failure'), ('compliance_gap', 'Compliance Gap Detected'), ('policy_violation', 'Policy Violation'), ('audit_due', 'Audit Due Soon'), ('evidence_missing', 'Evidence Missing'), ('retention_policy', 'Data Retention Policy')], max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='warning', max_length=10)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('related_controls', models.ManyToManyField(blank=True, related_name='alerts', to='compliance.compliancecontrol')),
                ('related_scans', models.ManyToManyField(blank=True, related_name='alerts', to='compliance.securityscan')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='compliancecontrol',
            unique_together={('framework', 'control_id')},
        ),
    ]
